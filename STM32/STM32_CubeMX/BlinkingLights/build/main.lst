ARM GAS  /tmp/ccURbmgX.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB67:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  /tmp/ccURbmgX.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/main.c **** void SystemClock_Config(void);
  50:Core/Src/main.c **** static void MX_GPIO_Init(void);
  51:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  56:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /**
  61:Core/Src/main.c ****  * @brief  The application entry point.
  62:Core/Src/main.c ****  * @retval int
  63:Core/Src/main.c ****  */
  64:Core/Src/main.c **** int main(void) {
  65:Core/Src/main.c **** 
  66:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c ****   /* USER CODE END 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick.
  73:Core/Src/main.c ****    */
  74:Core/Src/main.c ****   HAL_Init();
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* USER CODE END Init */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* Configure the system clock */
  81:Core/Src/main.c ****   SystemClock_Config();
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END SysInit */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Initialize all configured peripherals */
  88:Core/Src/main.c ****   MX_GPIO_Init();
  89:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  90:Core/Src/main.c **** 
ARM GAS  /tmp/ccURbmgX.s 			page 3


  91:Core/Src/main.c ****   /* USER CODE END 2 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Infinite loop */
  94:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  95:Core/Src/main.c ****   while (1) {
  96:Core/Src/main.c ****     /* USER CODE END WHILE */
  97:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_9);
  98:Core/Src/main.c ****     HAL_Delay(5000);
  99:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 100:Core/Src/main.c ****   }
 101:Core/Src/main.c ****   /* USER CODE END 3 */
 102:Core/Src/main.c **** }
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** /**
 105:Core/Src/main.c ****  * @brief System Clock Configuration
 106:Core/Src/main.c ****  * @retval None
 107:Core/Src/main.c ****  */
 108:Core/Src/main.c **** void SystemClock_Config(void) {
 109:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 110:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 113:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 114:Core/Src/main.c ****    */
 115:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 116:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 117:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 118:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 119:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 120:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 121:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 122:Core/Src/main.c ****     Error_Handler();
 123:Core/Src/main.c ****   }
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 126:Core/Src/main.c ****    */
 127:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK |
 128:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 129:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 130:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 131:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 132:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK) {
 135:Core/Src/main.c ****     Error_Handler();
 136:Core/Src/main.c ****   }
 137:Core/Src/main.c **** }
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** /**
 140:Core/Src/main.c ****  * @brief GPIO Initialization Function
 141:Core/Src/main.c ****  * @param None
 142:Core/Src/main.c ****  * @retval None
 143:Core/Src/main.c ****  */
 144:Core/Src/main.c **** static void MX_GPIO_Init(void) {
  26              		.loc 1 144 32 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
ARM GAS  /tmp/ccURbmgX.s 			page 4


  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 87B0     		sub	sp, sp, #28
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 40
 145:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 145 3 view .LVU1
  40              		.loc 1 145 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0294     		str	r4, [sp, #8]
  43 0008 0394     		str	r4, [sp, #12]
  44 000a 0494     		str	r4, [sp, #16]
  45 000c 0594     		str	r4, [sp, #20]
 146:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 151:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  46              		.loc 1 151 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 151 3 view .LVU4
  49              		.loc 1 151 3 view .LVU5
  50 000e 134B     		ldr	r3, .L3
  51 0010 9A69     		ldr	r2, [r3, #24]
  52 0012 42F01002 		orr	r2, r2, #16
  53 0016 9A61     		str	r2, [r3, #24]
  54              		.loc 1 151 3 view .LVU6
  55 0018 9A69     		ldr	r2, [r3, #24]
  56 001a 02F01002 		and	r2, r2, #16
  57 001e 0092     		str	r2, [sp]
  58              		.loc 1 151 3 view .LVU7
  59 0020 009A     		ldr	r2, [sp]
  60              	.LBE4:
  61              		.loc 1 151 3 view .LVU8
 152:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  62              		.loc 1 152 3 view .LVU9
  63              	.LBB5:
  64              		.loc 1 152 3 view .LVU10
  65              		.loc 1 152 3 view .LVU11
  66 0022 9A69     		ldr	r2, [r3, #24]
  67 0024 42F00402 		orr	r2, r2, #4
  68 0028 9A61     		str	r2, [r3, #24]
  69              		.loc 1 152 3 view .LVU12
  70 002a 9B69     		ldr	r3, [r3, #24]
  71 002c 03F00403 		and	r3, r3, #4
  72 0030 0193     		str	r3, [sp, #4]
  73              		.loc 1 152 3 view .LVU13
  74 0032 019B     		ldr	r3, [sp, #4]
  75              	.LBE5:
  76              		.loc 1 152 3 view .LVU14
 153:Core/Src/main.c **** 
ARM GAS  /tmp/ccURbmgX.s 			page 5


 154:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 155:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_9, GPIO_PIN_RESET);
  77              		.loc 1 155 3 view .LVU15
  78 0034 0A4D     		ldr	r5, .L3+4
  79 0036 2246     		mov	r2, r4
  80 0038 4FF40071 		mov	r1, #512
  81 003c 2846     		mov	r0, r5
  82 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
  83              	.LVL0:
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   /*Configure GPIO pin : PC9 */
 158:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_9;
  84              		.loc 1 158 3 view .LVU16
  85              		.loc 1 158 23 is_stmt 0 view .LVU17
  86 0042 4FF40073 		mov	r3, #512
  87 0046 0293     		str	r3, [sp, #8]
 159:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  88              		.loc 1 159 3 is_stmt 1 view .LVU18
  89              		.loc 1 159 24 is_stmt 0 view .LVU19
  90 0048 0123     		movs	r3, #1
  91 004a 0393     		str	r3, [sp, #12]
 160:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  92              		.loc 1 160 3 is_stmt 1 view .LVU20
  93              		.loc 1 160 24 is_stmt 0 view .LVU21
  94 004c 0494     		str	r4, [sp, #16]
 161:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
  95              		.loc 1 161 3 is_stmt 1 view .LVU22
  96              		.loc 1 161 25 is_stmt 0 view .LVU23
  97 004e 0593     		str	r3, [sp, #20]
 162:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
  98              		.loc 1 162 3 is_stmt 1 view .LVU24
  99 0050 02A9     		add	r1, sp, #8
 100 0052 2846     		mov	r0, r5
 101 0054 FFF7FEFF 		bl	HAL_GPIO_Init
 102              	.LVL1:
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 167:Core/Src/main.c **** }
 103              		.loc 1 167 1 is_stmt 0 view .LVU25
 104 0058 07B0     		add	sp, sp, #28
 105              	.LCFI2:
 106              		.cfi_def_cfa_offset 12
 107              		@ sp needed
 108 005a 30BD     		pop	{r4, r5, pc}
 109              	.L4:
 110              		.align	2
 111              	.L3:
 112 005c 00100240 		.word	1073876992
 113 0060 00100140 		.word	1073811456
 114              		.cfi_endproc
 115              	.LFE67:
 117              		.section	.text.Error_Handler,"ax",%progbits
 118              		.align	1
 119              		.global	Error_Handler
 120              		.syntax unified
ARM GAS  /tmp/ccURbmgX.s 			page 6


 121              		.thumb
 122              		.thumb_func
 124              	Error_Handler:
 125              	.LFB68:
 168:Core/Src/main.c **** 
 169:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** /* USER CODE END 4 */
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** /**
 174:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 175:Core/Src/main.c ****  * @retval None
 176:Core/Src/main.c ****  */
 177:Core/Src/main.c **** void Error_Handler(void) {
 126              		.loc 1 177 26 is_stmt 1 view -0
 127              		.cfi_startproc
 128              		@ Volatile: function does not return.
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              		@ link register save eliminated.
 178:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 179:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 180:Core/Src/main.c ****   __disable_irq();
 132              		.loc 1 180 3 view .LVU27
 133              	.LBB6:
 134              	.LBI6:
 135              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
ARM GAS  /tmp/ccURbmgX.s 			page 7


  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccURbmgX.s 			page 8


  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 136              		.loc 2 140 27 view .LVU28
 137              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
ARM GAS  /tmp/ccURbmgX.s 			page 9


 138              		.loc 2 142 3 view .LVU29
 139              		.syntax unified
 140              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 141 0000 72B6     		cpsid i
 142              	@ 0 "" 2
 143              		.thumb
 144              		.syntax unified
 145              	.L6:
 146              	.LBE7:
 147              	.LBE6:
 181:Core/Src/main.c ****   while (1) {
 148              		.loc 1 181 3 view .LVU30
 182:Core/Src/main.c ****   }
 149              		.loc 1 182 3 view .LVU31
 181:Core/Src/main.c ****   while (1) {
 150              		.loc 1 181 9 view .LVU32
 151 0002 FEE7     		b	.L6
 152              		.cfi_endproc
 153              	.LFE68:
 155              		.section	.text.SystemClock_Config,"ax",%progbits
 156              		.align	1
 157              		.global	SystemClock_Config
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 162              	SystemClock_Config:
 163              	.LFB66:
 108:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 164              		.loc 1 108 31 view -0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 64
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168 0000 00B5     		push	{lr}
 169              	.LCFI3:
 170              		.cfi_def_cfa_offset 4
 171              		.cfi_offset 14, -4
 172 0002 91B0     		sub	sp, sp, #68
 173              	.LCFI4:
 174              		.cfi_def_cfa_offset 72
 109:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 175              		.loc 1 109 3 view .LVU34
 109:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 176              		.loc 1 109 22 is_stmt 0 view .LVU35
 177 0004 2822     		movs	r2, #40
 178 0006 0021     		movs	r1, #0
 179 0008 06A8     		add	r0, sp, #24
 180 000a FFF7FEFF 		bl	memset
 181              	.LVL2:
 110:Core/Src/main.c **** 
 182              		.loc 1 110 3 is_stmt 1 view .LVU36
 110:Core/Src/main.c **** 
 183              		.loc 1 110 22 is_stmt 0 view .LVU37
 184 000e 0023     		movs	r3, #0
 185 0010 0193     		str	r3, [sp, #4]
 186 0012 0293     		str	r3, [sp, #8]
 187 0014 0393     		str	r3, [sp, #12]
 188 0016 0493     		str	r3, [sp, #16]
ARM GAS  /tmp/ccURbmgX.s 			page 10


 189 0018 0593     		str	r3, [sp, #20]
 115:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 190              		.loc 1 115 3 is_stmt 1 view .LVU38
 115:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 191              		.loc 1 115 36 is_stmt 0 view .LVU39
 192 001a 0223     		movs	r3, #2
 193 001c 0693     		str	r3, [sp, #24]
 116:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 194              		.loc 1 116 3 is_stmt 1 view .LVU40
 116:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 195              		.loc 1 116 30 is_stmt 0 view .LVU41
 196 001e 0122     		movs	r2, #1
 197 0020 0A92     		str	r2, [sp, #40]
 117:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 198              		.loc 1 117 3 is_stmt 1 view .LVU42
 117:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 199              		.loc 1 117 41 is_stmt 0 view .LVU43
 200 0022 1022     		movs	r2, #16
 201 0024 0B92     		str	r2, [sp, #44]
 118:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 202              		.loc 1 118 3 is_stmt 1 view .LVU44
 118:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 203              		.loc 1 118 34 is_stmt 0 view .LVU45
 204 0026 0D93     		str	r3, [sp, #52]
 119:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 205              		.loc 1 119 3 is_stmt 1 view .LVU46
 120:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 206              		.loc 1 120 3 view .LVU47
 120:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 207              		.loc 1 120 32 is_stmt 0 view .LVU48
 208 0028 4FF48013 		mov	r3, #1048576
 209 002c 0F93     		str	r3, [sp, #60]
 121:Core/Src/main.c ****     Error_Handler();
 210              		.loc 1 121 3 is_stmt 1 view .LVU49
 121:Core/Src/main.c ****     Error_Handler();
 211              		.loc 1 121 7 is_stmt 0 view .LVU50
 212 002e 06A8     		add	r0, sp, #24
 213 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
 214              	.LVL3:
 121:Core/Src/main.c ****     Error_Handler();
 215              		.loc 1 121 6 discriminator 1 view .LVU51
 216 0034 70B9     		cbnz	r0, .L11
 127:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 217              		.loc 1 127 3 is_stmt 1 view .LVU52
 127:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 218              		.loc 1 127 31 is_stmt 0 view .LVU53
 219 0036 0F23     		movs	r3, #15
 220 0038 0193     		str	r3, [sp, #4]
 129:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 221              		.loc 1 129 3 is_stmt 1 view .LVU54
 129:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 222              		.loc 1 129 34 is_stmt 0 view .LVU55
 223 003a 0223     		movs	r3, #2
 224 003c 0293     		str	r3, [sp, #8]
 130:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 225              		.loc 1 130 3 is_stmt 1 view .LVU56
 130:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
ARM GAS  /tmp/ccURbmgX.s 			page 11


 226              		.loc 1 130 35 is_stmt 0 view .LVU57
 227 003e 0021     		movs	r1, #0
 228 0040 0391     		str	r1, [sp, #12]
 131:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 229              		.loc 1 131 3 is_stmt 1 view .LVU58
 131:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 230              		.loc 1 131 36 is_stmt 0 view .LVU59
 231 0042 0491     		str	r1, [sp, #16]
 132:Core/Src/main.c **** 
 232              		.loc 1 132 3 is_stmt 1 view .LVU60
 132:Core/Src/main.c **** 
 233              		.loc 1 132 36 is_stmt 0 view .LVU61
 234 0044 0591     		str	r1, [sp, #20]
 134:Core/Src/main.c ****     Error_Handler();
 235              		.loc 1 134 3 is_stmt 1 view .LVU62
 134:Core/Src/main.c ****     Error_Handler();
 236              		.loc 1 134 7 is_stmt 0 view .LVU63
 237 0046 01A8     		add	r0, sp, #4
 238 0048 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 239              	.LVL4:
 134:Core/Src/main.c ****     Error_Handler();
 240              		.loc 1 134 6 discriminator 1 view .LVU64
 241 004c 20B9     		cbnz	r0, .L12
 137:Core/Src/main.c **** 
 242              		.loc 1 137 1 view .LVU65
 243 004e 11B0     		add	sp, sp, #68
 244              	.LCFI5:
 245              		.cfi_remember_state
 246              		.cfi_def_cfa_offset 4
 247              		@ sp needed
 248 0050 5DF804FB 		ldr	pc, [sp], #4
 249              	.L11:
 250              	.LCFI6:
 251              		.cfi_restore_state
 122:Core/Src/main.c ****   }
 252              		.loc 1 122 5 is_stmt 1 view .LVU66
 253 0054 FFF7FEFF 		bl	Error_Handler
 254              	.LVL5:
 255              	.L12:
 135:Core/Src/main.c ****   }
 256              		.loc 1 135 5 view .LVU67
 257 0058 FFF7FEFF 		bl	Error_Handler
 258              	.LVL6:
 259              		.cfi_endproc
 260              	.LFE66:
 262              		.section	.text.main,"ax",%progbits
 263              		.align	1
 264              		.global	main
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 269              	main:
 270              	.LFB65:
  64:Core/Src/main.c **** 
 271              		.loc 1 64 16 view -0
 272              		.cfi_startproc
 273              		@ Volatile: function does not return.
ARM GAS  /tmp/ccURbmgX.s 			page 12


 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276 0000 08B5     		push	{r3, lr}
 277              	.LCFI7:
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 3, -8
 280              		.cfi_offset 14, -4
  74:Core/Src/main.c **** 
 281              		.loc 1 74 3 view .LVU69
 282 0002 FFF7FEFF 		bl	HAL_Init
 283              	.LVL7:
  81:Core/Src/main.c **** 
 284              		.loc 1 81 3 view .LVU70
 285 0006 FFF7FEFF 		bl	SystemClock_Config
 286              	.LVL8:
  88:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 287              		.loc 1 88 3 view .LVU71
 288 000a FFF7FEFF 		bl	MX_GPIO_Init
 289              	.LVL9:
 290              	.L14:
  95:Core/Src/main.c ****     /* USER CODE END WHILE */
 291              		.loc 1 95 3 view .LVU72
  97:Core/Src/main.c ****     HAL_Delay(5000);
 292              		.loc 1 97 5 view .LVU73
 293 000e 4FF40071 		mov	r1, #512
 294 0012 0448     		ldr	r0, .L16
 295 0014 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 296              	.LVL10:
  98:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 297              		.loc 1 98 5 discriminator 1 view .LVU74
 298 0018 41F28830 		movw	r0, #5000
 299 001c FFF7FEFF 		bl	HAL_Delay
 300              	.LVL11:
  95:Core/Src/main.c ****     /* USER CODE END WHILE */
 301              		.loc 1 95 9 view .LVU75
 302 0020 F5E7     		b	.L14
 303              	.L17:
 304 0022 00BF     		.align	2
 305              	.L16:
 306 0024 00100140 		.word	1073811456
 307              		.cfi_endproc
 308              	.LFE65:
 310              		.text
 311              	.Letext0:
 312              		.file 3 "/usr/lib/gcc/arm-none-eabi/13.2.1/include/stdint.h"
 313              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f100xb.h"
 314              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 315              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 316              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 317              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 318              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 319              		.file 10 "<built-in>"
ARM GAS  /tmp/ccURbmgX.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccURbmgX.s:19     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccURbmgX.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccURbmgX.s:112    .text.MX_GPIO_Init:0000005c $d
     /tmp/ccURbmgX.s:118    .text.Error_Handler:00000000 $t
     /tmp/ccURbmgX.s:124    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccURbmgX.s:156    .text.SystemClock_Config:00000000 $t
     /tmp/ccURbmgX.s:162    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccURbmgX.s:263    .text.main:00000000 $t
     /tmp/ccURbmgX.s:269    .text.main:00000000 main
     /tmp/ccURbmgX.s:306    .text.main:00000024 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GPIO_TogglePin
HAL_Delay
