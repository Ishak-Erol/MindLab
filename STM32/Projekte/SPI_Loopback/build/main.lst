ARM GAS  /tmp/ccTvEUtA.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB68:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  /tmp/ccTvEUtA.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MX_GPIO_Init(void);
  52:Core/Src/main.c **** static void MX_SPI2_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /**
  63:Core/Src/main.c ****  * @brief  The application entry point.
  64:Core/Src/main.c ****  * @retval int
  65:Core/Src/main.c ****  */
  66:Core/Src/main.c **** int main(void) {
  67:Core/Src/main.c **** 
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* USER CODE END 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick.
  75:Core/Src/main.c ****    */
  76:Core/Src/main.c ****   HAL_Init();
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE END Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* Configure the system clock */
  83:Core/Src/main.c ****   SystemClock_Config();
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE END SysInit */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* Initialize all configured peripherals */
  90:Core/Src/main.c ****   MX_GPIO_Init();
ARM GAS  /tmp/ccTvEUtA.s 			page 3


  91:Core/Src/main.c ****   MX_SPI2_Init();
  92:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE END 2 */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* Infinite loop */
  97:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  98:Core/Src/main.c ****   const uint8_t message[] = "hello!1";
  99:Core/Src/main.c ****   uint8_t empfangen[sizeof(message)];
 100:Core/Src/main.c ****   while (1) {
 101:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_8, GPIO_PIN_RESET);
 102:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_9, GPIO_PIN_RESET);
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****     /* USER CODE END WHILE */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 107:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_8, GPIO_PIN_SET);
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****     HAL_SPI_TransmitReceive(&hspi2, message, empfangen, (uint16_t)8,
 110:Core/Src/main.c ****                             HAL_MAX_DELAY);
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****     if (strcmp(message, empfangen) == 0) {
 113:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_8, GPIO_PIN_SET);
 114:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_9, GPIO_PIN_SET);
 115:Core/Src/main.c ****     }
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****     HAL_Delay(3000);
 118:Core/Src/main.c ****   }
 119:Core/Src/main.c ****   /* USER CODE END 3 */
 120:Core/Src/main.c **** }
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** /**
 123:Core/Src/main.c ****  * @brief System Clock Configuration
 124:Core/Src/main.c ****  * @retval None
 125:Core/Src/main.c ****  */
 126:Core/Src/main.c **** void SystemClock_Config(void) {
 127:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 128:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 131:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 132:Core/Src/main.c ****    */
 133:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 135:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 137:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 138:Core/Src/main.c ****     Error_Handler();
 139:Core/Src/main.c ****   }
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 142:Core/Src/main.c ****    */
 143:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK |
 144:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 145:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 146:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
ARM GAS  /tmp/ccTvEUtA.s 			page 4


 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK) {
 151:Core/Src/main.c ****     Error_Handler();
 152:Core/Src/main.c ****   }
 153:Core/Src/main.c **** }
 154:Core/Src/main.c **** 
 155:Core/Src/main.c **** /**
 156:Core/Src/main.c ****  * @brief SPI2 Initialization Function
 157:Core/Src/main.c ****  * @param None
 158:Core/Src/main.c ****  * @retval None
 159:Core/Src/main.c ****  */
 160:Core/Src/main.c **** static void MX_SPI2_Init(void) {
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 169:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 170:Core/Src/main.c ****   hspi2.Instance = SPI2;
 171:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 172:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 173:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 174:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 175:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 176:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 177:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 178:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 179:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 180:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 181:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 182:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK) {
 183:Core/Src/main.c ****     Error_Handler();
 184:Core/Src/main.c ****   }
 185:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 188:Core/Src/main.c **** }
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** /**
 191:Core/Src/main.c ****  * @brief GPIO Initialization Function
 192:Core/Src/main.c ****  * @param None
 193:Core/Src/main.c ****  * @retval None
 194:Core/Src/main.c ****  */
 195:Core/Src/main.c **** static void MX_GPIO_Init(void) {
  26              		.loc 1 195 32 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
ARM GAS  /tmp/ccTvEUtA.s 			page 5


  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 196:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 196 3 view .LVU1
  40              		.loc 1 196 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0494     		str	r4, [sp, #16]
  43 0008 0594     		str	r4, [sp, #20]
  44 000a 0694     		str	r4, [sp, #24]
  45 000c 0794     		str	r4, [sp, #28]
 197:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 202:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  46              		.loc 1 202 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 202 3 view .LVU4
  49              		.loc 1 202 3 view .LVU5
  50 000e 184B     		ldr	r3, .L3
  51 0010 9A69     		ldr	r2, [r3, #24]
  52 0012 42F00802 		orr	r2, r2, #8
  53 0016 9A61     		str	r2, [r3, #24]
  54              		.loc 1 202 3 view .LVU6
  55 0018 9A69     		ldr	r2, [r3, #24]
  56 001a 02F00802 		and	r2, r2, #8
  57 001e 0192     		str	r2, [sp, #4]
  58              		.loc 1 202 3 view .LVU7
  59 0020 019A     		ldr	r2, [sp, #4]
  60              	.LBE4:
  61              		.loc 1 202 3 view .LVU8
 203:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  62              		.loc 1 203 3 view .LVU9
  63              	.LBB5:
  64              		.loc 1 203 3 view .LVU10
  65              		.loc 1 203 3 view .LVU11
  66 0022 9A69     		ldr	r2, [r3, #24]
  67 0024 42F01002 		orr	r2, r2, #16
  68 0028 9A61     		str	r2, [r3, #24]
  69              		.loc 1 203 3 view .LVU12
  70 002a 9A69     		ldr	r2, [r3, #24]
  71 002c 02F01002 		and	r2, r2, #16
  72 0030 0292     		str	r2, [sp, #8]
  73              		.loc 1 203 3 view .LVU13
  74 0032 029A     		ldr	r2, [sp, #8]
  75              	.LBE5:
  76              		.loc 1 203 3 view .LVU14
 204:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  77              		.loc 1 204 3 view .LVU15
  78              	.LBB6:
  79              		.loc 1 204 3 view .LVU16
  80              		.loc 1 204 3 view .LVU17
  81 0034 9A69     		ldr	r2, [r3, #24]
  82 0036 42F00402 		orr	r2, r2, #4
ARM GAS  /tmp/ccTvEUtA.s 			page 6


  83 003a 9A61     		str	r2, [r3, #24]
  84              		.loc 1 204 3 view .LVU18
  85 003c 9B69     		ldr	r3, [r3, #24]
  86 003e 03F00403 		and	r3, r3, #4
  87 0042 0393     		str	r3, [sp, #12]
  88              		.loc 1 204 3 view .LVU19
  89 0044 039B     		ldr	r3, [sp, #12]
  90              	.LBE6:
  91              		.loc 1 204 3 view .LVU20
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 207:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_8 | GPIO_PIN_9, GPIO_PIN_RESET);
  92              		.loc 1 207 3 view .LVU21
  93 0046 0B4D     		ldr	r5, .L3+4
  94 0048 2246     		mov	r2, r4
  95 004a 4FF44071 		mov	r1, #768
  96 004e 2846     		mov	r0, r5
  97 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
  98              	.LVL0:
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /*Configure GPIO pins : PC8 PC9 */
 210:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8 | GPIO_PIN_9;
  99              		.loc 1 210 3 view .LVU22
 100              		.loc 1 210 23 is_stmt 0 view .LVU23
 101 0054 4FF44073 		mov	r3, #768
 102 0058 0493     		str	r3, [sp, #16]
 211:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 103              		.loc 1 211 3 is_stmt 1 view .LVU24
 104              		.loc 1 211 24 is_stmt 0 view .LVU25
 105 005a 0123     		movs	r3, #1
 106 005c 0593     		str	r3, [sp, #20]
 212:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 107              		.loc 1 212 3 is_stmt 1 view .LVU26
 108              		.loc 1 212 24 is_stmt 0 view .LVU27
 109 005e 0694     		str	r4, [sp, #24]
 213:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 110              		.loc 1 213 3 is_stmt 1 view .LVU28
 111              		.loc 1 213 25 is_stmt 0 view .LVU29
 112 0060 0223     		movs	r3, #2
 113 0062 0793     		str	r3, [sp, #28]
 214:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 114              		.loc 1 214 3 is_stmt 1 view .LVU30
 115 0064 04A9     		add	r1, sp, #16
 116 0066 2846     		mov	r0, r5
 117 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 118              	.LVL1:
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_2 */
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 219:Core/Src/main.c **** }
 119              		.loc 1 219 1 is_stmt 0 view .LVU31
 120 006c 09B0     		add	sp, sp, #36
 121              	.LCFI2:
 122              		.cfi_def_cfa_offset 12
 123              		@ sp needed
 124 006e 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccTvEUtA.s 			page 7


 125              	.L4:
 126              		.align	2
 127              	.L3:
 128 0070 00100240 		.word	1073876992
 129 0074 00100140 		.word	1073811456
 130              		.cfi_endproc
 131              	.LFE68:
 133              		.section	.text.Error_Handler,"ax",%progbits
 134              		.align	1
 135              		.global	Error_Handler
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 140              	Error_Handler:
 141              	.LFB69:
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 222:Core/Src/main.c **** 
 223:Core/Src/main.c **** /* USER CODE END 4 */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c **** /**
 226:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 227:Core/Src/main.c ****  * @retval None
 228:Core/Src/main.c ****  */
 229:Core/Src/main.c **** void Error_Handler(void) {
 142              		.loc 1 229 26 is_stmt 1 view -0
 143              		.cfi_startproc
 144              		@ Volatile: function does not return.
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 230:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 231:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 232:Core/Src/main.c ****   __disable_irq();
 148              		.loc 1 232 3 view .LVU33
 149              	.LBB7:
 150              	.LBI7:
 151              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  /tmp/ccTvEUtA.s 			page 8


  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
ARM GAS  /tmp/ccTvEUtA.s 			page 9


  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccTvEUtA.s 			page 10


 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 152              		.loc 2 140 27 view .LVU34
 153              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 154              		.loc 2 142 3 view .LVU35
 155              		.syntax unified
 156              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 157 0000 72B6     		cpsid i
 158              	@ 0 "" 2
 159              		.thumb
 160              		.syntax unified
 161              	.L6:
 162              	.LBE8:
 163              	.LBE7:
 233:Core/Src/main.c ****   while (1) {
 164              		.loc 1 233 3 view .LVU36
 234:Core/Src/main.c ****   }
 165              		.loc 1 234 3 view .LVU37
 233:Core/Src/main.c ****   while (1) {
 166              		.loc 1 233 9 view .LVU38
 167 0002 FEE7     		b	.L6
 168              		.cfi_endproc
 169              	.LFE69:
 171              		.section	.text.MX_SPI2_Init,"ax",%progbits
 172              		.align	1
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 177              	MX_SPI2_Init:
 178              	.LFB67:
 160:Core/Src/main.c **** 
 179              		.loc 1 160 32 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183 0000 08B5     		push	{r3, lr}
 184              	.LCFI3:
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 3, -8
 187              		.cfi_offset 14, -4
 170:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 188              		.loc 1 170 3 view .LVU40
 170:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 189              		.loc 1 170 18 is_stmt 0 view .LVU41
 190 0002 0D48     		ldr	r0, .L11
 191 0004 0D4B     		ldr	r3, .L11+4
 192 0006 0360     		str	r3, [r0]
 171:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 193              		.loc 1 171 3 is_stmt 1 view .LVU42
 171:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
ARM GAS  /tmp/ccTvEUtA.s 			page 11


 194              		.loc 1 171 19 is_stmt 0 view .LVU43
 195 0008 4FF48273 		mov	r3, #260
 196 000c 4360     		str	r3, [r0, #4]
 172:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 197              		.loc 1 172 3 is_stmt 1 view .LVU44
 172:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 198              		.loc 1 172 24 is_stmt 0 view .LVU45
 199 000e 0023     		movs	r3, #0
 200 0010 8360     		str	r3, [r0, #8]
 173:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 201              		.loc 1 173 3 is_stmt 1 view .LVU46
 173:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 202              		.loc 1 173 23 is_stmt 0 view .LVU47
 203 0012 C360     		str	r3, [r0, #12]
 174:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 204              		.loc 1 174 3 is_stmt 1 view .LVU48
 174:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 205              		.loc 1 174 26 is_stmt 0 view .LVU49
 206 0014 0361     		str	r3, [r0, #16]
 175:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 207              		.loc 1 175 3 is_stmt 1 view .LVU50
 175:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 208              		.loc 1 175 23 is_stmt 0 view .LVU51
 209 0016 4361     		str	r3, [r0, #20]
 176:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 210              		.loc 1 176 3 is_stmt 1 view .LVU52
 176:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 211              		.loc 1 176 18 is_stmt 0 view .LVU53
 212 0018 4FF40072 		mov	r2, #512
 213 001c 8261     		str	r2, [r0, #24]
 177:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 214              		.loc 1 177 3 is_stmt 1 view .LVU54
 177:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 215              		.loc 1 177 32 is_stmt 0 view .LVU55
 216 001e C361     		str	r3, [r0, #28]
 178:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 217              		.loc 1 178 3 is_stmt 1 view .LVU56
 178:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 218              		.loc 1 178 23 is_stmt 0 view .LVU57
 219 0020 0362     		str	r3, [r0, #32]
 179:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 220              		.loc 1 179 3 is_stmt 1 view .LVU58
 179:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 221              		.loc 1 179 21 is_stmt 0 view .LVU59
 222 0022 4362     		str	r3, [r0, #36]
 180:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 223              		.loc 1 180 3 is_stmt 1 view .LVU60
 180:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 224              		.loc 1 180 29 is_stmt 0 view .LVU61
 225 0024 8362     		str	r3, [r0, #40]
 181:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK) {
 226              		.loc 1 181 3 is_stmt 1 view .LVU62
 181:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK) {
 227              		.loc 1 181 28 is_stmt 0 view .LVU63
 228 0026 0A23     		movs	r3, #10
 229 0028 C362     		str	r3, [r0, #44]
 182:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/ccTvEUtA.s 			page 12


 230              		.loc 1 182 3 is_stmt 1 view .LVU64
 182:Core/Src/main.c ****     Error_Handler();
 231              		.loc 1 182 7 is_stmt 0 view .LVU65
 232 002a FFF7FEFF 		bl	HAL_SPI_Init
 233              	.LVL2:
 182:Core/Src/main.c ****     Error_Handler();
 234              		.loc 1 182 6 discriminator 1 view .LVU66
 235 002e 00B9     		cbnz	r0, .L10
 188:Core/Src/main.c **** 
 236              		.loc 1 188 1 view .LVU67
 237 0030 08BD     		pop	{r3, pc}
 238              	.L10:
 183:Core/Src/main.c ****   }
 239              		.loc 1 183 5 is_stmt 1 view .LVU68
 240 0032 FFF7FEFF 		bl	Error_Handler
 241              	.LVL3:
 242              	.L12:
 243 0036 00BF     		.align	2
 244              	.L11:
 245 0038 00000000 		.word	hspi2
 246 003c 00380040 		.word	1073756160
 247              		.cfi_endproc
 248              	.LFE67:
 250              		.section	.text.SystemClock_Config,"ax",%progbits
 251              		.align	1
 252              		.global	SystemClock_Config
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 257              	SystemClock_Config:
 258              	.LFB66:
 126:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 259              		.loc 1 126 31 view -0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 64
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263 0000 00B5     		push	{lr}
 264              	.LCFI4:
 265              		.cfi_def_cfa_offset 4
 266              		.cfi_offset 14, -4
 267 0002 91B0     		sub	sp, sp, #68
 268              	.LCFI5:
 269              		.cfi_def_cfa_offset 72
 127:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 270              		.loc 1 127 3 view .LVU70
 127:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 271              		.loc 1 127 22 is_stmt 0 view .LVU71
 272 0004 2822     		movs	r2, #40
 273 0006 0021     		movs	r1, #0
 274 0008 06A8     		add	r0, sp, #24
 275 000a FFF7FEFF 		bl	memset
 276              	.LVL4:
 128:Core/Src/main.c **** 
 277              		.loc 1 128 3 is_stmt 1 view .LVU72
 128:Core/Src/main.c **** 
 278              		.loc 1 128 22 is_stmt 0 view .LVU73
 279 000e 0023     		movs	r3, #0
ARM GAS  /tmp/ccTvEUtA.s 			page 13


 280 0010 0193     		str	r3, [sp, #4]
 281 0012 0293     		str	r3, [sp, #8]
 282 0014 0393     		str	r3, [sp, #12]
 283 0016 0493     		str	r3, [sp, #16]
 284 0018 0593     		str	r3, [sp, #20]
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 285              		.loc 1 133 3 is_stmt 1 view .LVU74
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 286              		.loc 1 133 36 is_stmt 0 view .LVU75
 287 001a 0223     		movs	r3, #2
 288 001c 0693     		str	r3, [sp, #24]
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 289              		.loc 1 134 3 is_stmt 1 view .LVU76
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 290              		.loc 1 134 30 is_stmt 0 view .LVU77
 291 001e 0123     		movs	r3, #1
 292 0020 0A93     		str	r3, [sp, #40]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 293              		.loc 1 135 3 is_stmt 1 view .LVU78
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 294              		.loc 1 135 41 is_stmt 0 view .LVU79
 295 0022 1023     		movs	r3, #16
 296 0024 0B93     		str	r3, [sp, #44]
 136:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
 297              		.loc 1 136 3 is_stmt 1 view .LVU80
 137:Core/Src/main.c ****     Error_Handler();
 298              		.loc 1 137 3 view .LVU81
 137:Core/Src/main.c ****     Error_Handler();
 299              		.loc 1 137 7 is_stmt 0 view .LVU82
 300 0026 06A8     		add	r0, sp, #24
 301 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 302              	.LVL5:
 137:Core/Src/main.c ****     Error_Handler();
 303              		.loc 1 137 6 discriminator 1 view .LVU83
 304 002c 68B9     		cbnz	r0, .L17
 143:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 305              		.loc 1 143 3 is_stmt 1 view .LVU84
 143:Core/Src/main.c ****                                 RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 306              		.loc 1 143 31 is_stmt 0 view .LVU85
 307 002e 0F23     		movs	r3, #15
 308 0030 0193     		str	r3, [sp, #4]
 145:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 309              		.loc 1 145 3 is_stmt 1 view .LVU86
 145:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 310              		.loc 1 145 34 is_stmt 0 view .LVU87
 311 0032 0021     		movs	r1, #0
 312 0034 0291     		str	r1, [sp, #8]
 146:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 313              		.loc 1 146 3 is_stmt 1 view .LVU88
 146:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 314              		.loc 1 146 35 is_stmt 0 view .LVU89
 315 0036 0391     		str	r1, [sp, #12]
 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 316              		.loc 1 147 3 is_stmt 1 view .LVU90
 147:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 317              		.loc 1 147 36 is_stmt 0 view .LVU91
 318 0038 0491     		str	r1, [sp, #16]
ARM GAS  /tmp/ccTvEUtA.s 			page 14


 148:Core/Src/main.c **** 
 319              		.loc 1 148 3 is_stmt 1 view .LVU92
 148:Core/Src/main.c **** 
 320              		.loc 1 148 36 is_stmt 0 view .LVU93
 321 003a 0591     		str	r1, [sp, #20]
 150:Core/Src/main.c ****     Error_Handler();
 322              		.loc 1 150 3 is_stmt 1 view .LVU94
 150:Core/Src/main.c ****     Error_Handler();
 323              		.loc 1 150 7 is_stmt 0 view .LVU95
 324 003c 01A8     		add	r0, sp, #4
 325 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 326              	.LVL6:
 150:Core/Src/main.c ****     Error_Handler();
 327              		.loc 1 150 6 discriminator 1 view .LVU96
 328 0042 20B9     		cbnz	r0, .L18
 153:Core/Src/main.c **** 
 329              		.loc 1 153 1 view .LVU97
 330 0044 11B0     		add	sp, sp, #68
 331              	.LCFI6:
 332              		.cfi_remember_state
 333              		.cfi_def_cfa_offset 4
 334              		@ sp needed
 335 0046 5DF804FB 		ldr	pc, [sp], #4
 336              	.L17:
 337              	.LCFI7:
 338              		.cfi_restore_state
 138:Core/Src/main.c ****   }
 339              		.loc 1 138 5 is_stmt 1 view .LVU98
 340 004a FFF7FEFF 		bl	Error_Handler
 341              	.LVL7:
 342              	.L18:
 151:Core/Src/main.c ****   }
 343              		.loc 1 151 5 view .LVU99
 344 004e FFF7FEFF 		bl	Error_Handler
 345              	.LVL8:
 346              		.cfi_endproc
 347              	.LFE66:
 349              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 350              		.align	2
 351              	.LC0:
 352 0000 68656C6C 		.ascii	"hello!1\000"
 352      6F213100 
 353              		.section	.text.main,"ax",%progbits
 354              		.align	1
 355              		.global	main
 356              		.syntax unified
 357              		.thumb
 358              		.thumb_func
 360              	main:
 361              	.LFB65:
  66:Core/Src/main.c **** 
 362              		.loc 1 66 16 view -0
 363              		.cfi_startproc
 364              		@ Volatile: function does not return.
 365              		@ args = 0, pretend = 0, frame = 16
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367 0000 00B5     		push	{lr}
ARM GAS  /tmp/ccTvEUtA.s 			page 15


 368              	.LCFI8:
 369              		.cfi_def_cfa_offset 4
 370              		.cfi_offset 14, -4
 371 0002 87B0     		sub	sp, sp, #28
 372              	.LCFI9:
 373              		.cfi_def_cfa_offset 32
  76:Core/Src/main.c **** 
 374              		.loc 1 76 3 view .LVU101
 375 0004 FFF7FEFF 		bl	HAL_Init
 376              	.LVL9:
  83:Core/Src/main.c **** 
 377              		.loc 1 83 3 view .LVU102
 378 0008 FFF7FEFF 		bl	SystemClock_Config
 379              	.LVL10:
  90:Core/Src/main.c ****   MX_SPI2_Init();
 380              		.loc 1 90 3 view .LVU103
 381 000c FFF7FEFF 		bl	MX_GPIO_Init
 382              	.LVL11:
  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 383              		.loc 1 91 3 view .LVU104
 384 0010 FFF7FEFF 		bl	MX_SPI2_Init
 385              	.LVL12:
  98:Core/Src/main.c ****   uint8_t empfangen[sizeof(message)];
 386              		.loc 1 98 3 view .LVU105
  98:Core/Src/main.c ****   uint8_t empfangen[sizeof(message)];
 387              		.loc 1 98 17 is_stmt 0 view .LVU106
 388 0014 1D4B     		ldr	r3, .L24
 389 0016 93E80300 		ldm	r3, {r0, r1}
 390 001a 06AB     		add	r3, sp, #24
 391 001c 03E90300 		stmdb	r3, {r0, r1}
 392 0020 0FE0     		b	.L21
 393              	.L23:
 394              	.LBB9:
 113:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_9, GPIO_PIN_SET);
 395              		.loc 1 113 7 is_stmt 1 view .LVU107
 396 0022 0122     		movs	r2, #1
 397 0024 4FF48071 		mov	r1, #256
 398 0028 2046     		mov	r0, r4
 399 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 400              	.LVL13:
 114:Core/Src/main.c ****     }
 401              		.loc 1 114 7 view .LVU108
 402 002e 0122     		movs	r2, #1
 403 0030 4FF40071 		mov	r1, #512
 404 0034 2046     		mov	r0, r4
 405 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 406              	.LVL14:
 407              	.L20:
 408              	.LBE9:
 117:Core/Src/main.c ****   }
 409              		.loc 1 117 5 view .LVU109
 410 003a 40F6B830 		movw	r0, #3000
 411 003e FFF7FEFF 		bl	HAL_Delay
 412              	.LVL15:
 100:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_8, GPIO_PIN_RESET);
 413              		.loc 1 100 9 view .LVU110
 414              	.L21:
ARM GAS  /tmp/ccTvEUtA.s 			page 16


  99:Core/Src/main.c ****   while (1) {
 415              		.loc 1 99 3 view .LVU111
 100:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_8, GPIO_PIN_RESET);
 416              		.loc 1 100 3 view .LVU112
 101:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOC, GPIO_PIN_9, GPIO_PIN_RESET);
 417              		.loc 1 101 5 view .LVU113
 418 0042 134C     		ldr	r4, .L24+4
 419 0044 0022     		movs	r2, #0
 420 0046 4FF48071 		mov	r1, #256
 421 004a 2046     		mov	r0, r4
 422 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 423              	.LVL16:
 102:Core/Src/main.c **** 
 424              		.loc 1 102 5 view .LVU114
 425 0050 0022     		movs	r2, #0
 426 0052 4FF40071 		mov	r1, #512
 427 0056 2046     		mov	r0, r4
 428 0058 FFF7FEFF 		bl	HAL_GPIO_WritePin
 429              	.LVL17:
 107:Core/Src/main.c **** 
 430              		.loc 1 107 5 view .LVU115
 431 005c 0122     		movs	r2, #1
 432 005e 4FF48071 		mov	r1, #256
 433 0062 2046     		mov	r0, r4
 434 0064 FFF7FEFF 		bl	HAL_GPIO_WritePin
 435              	.LVL18:
 109:Core/Src/main.c ****                             HAL_MAX_DELAY);
 436              		.loc 1 109 5 view .LVU116
 437 0068 4FF0FF33 		mov	r3, #-1
 438 006c 0093     		str	r3, [sp]
 439 006e 0823     		movs	r3, #8
 440 0070 0DEB0302 		add	r2, sp, r3
 441 0074 04A9     		add	r1, sp, #16
 442 0076 0748     		ldr	r0, .L24+8
 443 0078 FFF7FEFF 		bl	HAL_SPI_TransmitReceive
 444              	.LVL19:
 112:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_8, GPIO_PIN_SET);
 445              		.loc 1 112 5 view .LVU117
 446              	.LBB10:
 112:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_8, GPIO_PIN_SET);
 447              		.loc 1 112 9 is_stmt 0 view .LVU118
 448 007c 02A9     		add	r1, sp, #8
 449 007e 04A8     		add	r0, sp, #16
 450 0080 FFF7FEFF 		bl	strcmp
 451              	.LVL20:
 112:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOC, GPIO_PIN_8, GPIO_PIN_SET);
 452              		.loc 1 112 8 discriminator 1 view .LVU119
 453 0084 0028     		cmp	r0, #0
 454 0086 CCD0     		beq	.L23
 455 0088 D7E7     		b	.L20
 456              	.L25:
 457 008a 00BF     		.align	2
 458              	.L24:
 459 008c 00000000 		.word	.LC0
 460 0090 00100140 		.word	1073811456
 461 0094 00000000 		.word	hspi2
 462              	.LBE10:
ARM GAS  /tmp/ccTvEUtA.s 			page 17


 463              		.cfi_endproc
 464              	.LFE65:
 466              		.global	hspi2
 467              		.section	.bss.hspi2,"aw",%nobits
 468              		.align	2
 471              	hspi2:
 472 0000 00000000 		.space	88
 472      00000000 
 472      00000000 
 472      00000000 
 472      00000000 
 473              		.text
 474              	.Letext0:
 475              		.file 3 "/usr/lib/gcc/arm-none-eabi/13.2.1/include/stdint.h"
 476              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f100xb.h"
 477              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 478              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 479              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 480              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 481              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 482              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 483              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 484              		.file 12 "<built-in>"
ARM GAS  /tmp/ccTvEUtA.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccTvEUtA.s:19     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccTvEUtA.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccTvEUtA.s:128    .text.MX_GPIO_Init:00000070 $d
     /tmp/ccTvEUtA.s:134    .text.Error_Handler:00000000 $t
     /tmp/ccTvEUtA.s:140    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccTvEUtA.s:172    .text.MX_SPI2_Init:00000000 $t
     /tmp/ccTvEUtA.s:177    .text.MX_SPI2_Init:00000000 MX_SPI2_Init
     /tmp/ccTvEUtA.s:245    .text.MX_SPI2_Init:00000038 $d
     /tmp/ccTvEUtA.s:471    .bss.hspi2:00000000 hspi2
     /tmp/ccTvEUtA.s:251    .text.SystemClock_Config:00000000 $t
     /tmp/ccTvEUtA.s:257    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccTvEUtA.s:350    .rodata.main.str1.4:00000000 $d
     /tmp/ccTvEUtA.s:354    .text.main:00000000 $t
     /tmp/ccTvEUtA.s:360    .text.main:00000000 main
     /tmp/ccTvEUtA.s:459    .text.main:0000008c $d
     /tmp/ccTvEUtA.s:468    .bss.hspi2:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_SPI_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
HAL_SPI_TransmitReceive
strcmp
